/*
 * ==================================================================================
 * üìä ADMIN DASHBOARD PAGE - ‡∏´‡∏ô‡πâ‡∏≤ Dashboard ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin
 * ==================================================================================
 * 
 * üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin
 * üîê ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ
 * üìä ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå: ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ, ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå, ‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
 * 
 * ==================================================================================
 */

import { useEffect, useState } from "react";
import { useAuth } from "../auth.jsx";
import Header from "./Header";
import Footer from "./Footer";

// üåê ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API URL ‡∏à‡∏≤‡∏Å environment variable
const API = import.meta.env.VITE_API_URL || "http://localhost:3000";

export default function Dashboard() {
  const { user } = useAuth();                    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô admin)
  const [stats, setStats] = useState(null);     // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö

  useEffect(() => {
    fetch(`${API}/api/admin/dashboard`, {
      headers: { "Authorization": `Bearer ${user.token}` }
    })
      .then(res => res.json())
      .then(data => setStats(data));
  }, []);

  if (!stats) return <div className="container py-4">Loading...</div>;

  return (
    <>
    <Header />
        <div className="container py-4">
      <h3>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°</h3>
      <div className="row mb-4">
        <div className="col-md-4">
          <div className="card text-center">
            <div className="card-body">
              <h5 className="card-title">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h5>
              <p className="display-6">{stats.userCount}</p>
            </div>
          </div>
        </div>
        <div className="col-md-4">
          <div className="card text-center">
            <div className="card-body">
              <h5 className="card-title">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h5>
              <p className="display-6">{stats.threadCount}</p>
            </div>
          </div>
        </div>
      </div>
      <h5 className="mt-4">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô (7 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)</h5>
      <table className="table table-bordered w-auto">
        <thead>
          <tr>
            <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</th>
          </tr>
        </thead>
        <tbody>
          {stats.dailyUsers.map((d, index) => (
            <tr key={`${d.date}-${index}`}>
              <td>{d.date}</td>
              <td>{d.count}</td>
            </tr>
          ))}
        </tbody>
      </table>
      {/* ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≤‡∏ü (‡πÉ‡∏ä‡πâ chart.js ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∑‡πà‡∏ô‡πÜ) */}
      {/* <canvas id="userChart"></canvas> */}
    </div>
    </>
  );
}