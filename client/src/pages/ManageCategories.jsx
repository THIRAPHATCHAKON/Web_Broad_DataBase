/*
 * ==================================================================================
 * üìÇ MANAGE CATEGORIES PAGE - ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ (Admin Only)
 * ==================================================================================
 * 
 * üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡πÉ‡∏´‡πâ Admin ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ (‡πÄ‡∏û‡∏¥‡πà‡∏°, ‡∏•‡∏ö, ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
 * üîê ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ
 * üìä ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà, ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà, ‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
 * 
 * ==================================================================================
 */

import Header from "./Header";
import Footer from "./Footer";
import { useEffect, useState } from "react";
import { useAuth } from "../auth.jsx";

// üåê ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API URL ‡∏à‡∏≤‡∏Å environment variable
const API = import.meta.env.VITE_API_URL || "http://localhost:3000";

export default function ManageCategories() {
  const { user } = useAuth();                         // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô admin)
  const [categories, setCategories] = useState([]);   // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const [newName, setNewName] = useState("");         // ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°

  useEffect(() => {
    fetch(`${API}/api/categories`)
      .then(res => res.json())
      .then(setCategories);
  }, []);

  const addCategory = async (e) => {
    e.preventDefault();
    if (!newName.trim()) return;
    const res = await fetch(`${API}/api/categories`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${user.token}`
      },
      body: JSON.stringify({ name: newName })
    });
    const data = await res.json();
    if (res.ok) {
      setCategories([...categories, data.category]);
      setNewName("");
    } else {
      alert(data.message || "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  };

  const deleteCategory = async (id) => {
    if (!window.confirm("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ô‡∏µ‡πâ?")) return;
    const res = await fetch(`${API}/api/categories/${id}`, {
      method: "DELETE",
      headers: { "Authorization": `Bearer ${user.token}` }
    });
    if (res.ok) {
      setCategories(categories.filter(c => c.id !== id));
    } else {
      alert("‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    }
  };

  return (
    <>
      <Header />
      <div className="container py-4">
        <h3>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</h3>
        <form className="mb-3 d-flex gap-2" onSubmit={addCategory}>
          <input
            className="form-control"
            value={newName}
            onChange={e => setNewName(e.target.value)}
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà"
          />
          <button className="btn btn-success" type="submit">‡πÄ‡∏û‡∏¥‡πà‡∏°</button>
        </form>
        <ul className="list-group">
          {categories.map(cat => (
            <li className="list-group-item d-flex justify-content-between align-items-center" key={cat.id}>
              <span>{cat.name}</span>
              <button className="btn btn-sm btn-danger" onClick={() => deleteCategory(cat.id)}>‡∏•‡∏ö</button>
            </li>
          ))}
        </ul>
      </div>
    </>
  );
}