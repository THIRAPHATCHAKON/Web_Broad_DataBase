/*
 * ==================================================================================
 * ЁЯУЭ REGISTER PAGE - р╕лр╕Щр╣Йр╕▓р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
 * ==================================================================================
 * 
 * ЁЯОп р╕зр╕▒р╕Хр╕Цр╕╕р╕Ыр╕гр╕░р╕кр╕Зр╕Др╣М: р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Бр╕ер╕░р╕кр╣Ир╕Зр╣Др╕Ыр╕вр╕▒р╕Зр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М
 * ЁЯФТ р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ: Validation р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ, р╕Др╕зр╕▓р╕бр╕вр╕▓р╕з, р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
 * ЁЯОи UX/UI: Real-time validation, Loading states, Error messages
 * 
 * ==================================================================================
 */

import { useState } from "react";
import { Link, useNavigate } from "react-router-dom";

export default function Register() {
  // ЁЯУЭ States р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕е form
  const [username, setUsername]         = useState("");        // р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й
  const [email, setEmail]               = useState("");        // р╕нр╕╡р╣Ар╕бр╕е
  const [password, setPassword]         = useState("");        // р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
  const [confirmPassword, setConfirm]   = useState("");        // р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
  
  // ЁЯОЫя╕П States р╕кр╕│р╕лр╕гр╕▒р╕Ъ UI control
  const [loading, setLoading]           = useState(false);     // р╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е
  const [error, setError]               = useState("");        // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
  
  const navigate = useNavigate();

  // ЁЯЪА р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Бр╕▓р╕гр╕кр╣Ир╕З form р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
  async function onSubmit(e) {
    e.preventDefault();                                      // р╕Ыр╣Йр╕нр╕Зр╕Бр╕▒р╕Щр╕Бр╕▓р╕г refresh р╕лр╕Щр╣Йр╕▓
    setError("");                                            // р╕ер╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Ар╕Фр╕┤р╕б

    // ЁЯФН Client-side validation - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╣Ир╕нр╕Щр╕кр╣Ир╕Зр╣Др╕Ыр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М
    if (password.length < 6) {
      return setError("р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╣Йр╕нр╕Зр╕бр╕╡р╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 6 р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕г");
    }
    if (password !== confirmPassword) {
      return setError("р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Бр╕ер╕░р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ");
    }
    if (!username.trim()) {
      return setError("р╕Бр╕гр╕╕р╕Ур╕▓р╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й");
    }

    try {
      setLoading(true);                                      // р╕Хр╕▒р╣Йр╕Зр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╣Зр╕Щр╕Бр╕│р╕ер╕▒р╕Зр╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е
      
      // ЁЯУб р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Др╕Ыр╕вр╕▒р╕Зр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М
      const r = await fetch("/api/register", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ username, email, password }),
      });

      if (!r.ok) {
        const body = await r.json().catch(() => ({}));
        throw new Error(body.message || "р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И");
      }

      // р╕кр╕бр╕▒р╕Др╕гр╕кр╕│р╣Ар╕гр╣Зр╕И: р╣Ар╕ер╕╖р╕нр╕Б 1 р╕зр╕┤р╕Шр╕╡
      // р╕зр╕┤р╕Шр╕╡ A: р╕Юр╕▓р╣Др╕Ыр╕лр╕Щр╣Йр╕▓ login
      navigate("/login");

      // р╕зр╕┤р╕Шр╕╡ B: login р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤ (р╕Цр╣Йр╕▓ /api/register р╕Др╕╖р╕Щ user/token р╕бр╕▓)
      // const data = await r.json();
      // sessionStorage.setItem("user", JSON.stringify(data.user));
      // sessionStorage.setItem("token", data.token);
      // navigate("/Thread");

    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="d-flex justify-content-center align-items-center vh-100">
      <div className="card p-4 col-11 col-sm-8 col-md-5 col-lg-4">
        <h3 className="text-center mb-3">р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б</h3>

        {error && <div className="alert alert-danger py-2">{error}</div>}

        <form id="register-form" onSubmit={onSubmit}>
          <div className="mb-3">
            <label className="form-label">р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й</label>
            <input
              type="text" className="form-control" id="reg-username"
              value={username} onChange={(e) => setUsername(e.target.value)} required
            />
          </div>

          <div className="mb-3">
            <label className="form-label">р╕нр╕╡р╣Ар╕бр╕е</label>
            <input
              type="email" className="form-control" id="reg-email"
              value={email} onChange={(e) => setEmail(e.target.value)} required
            />
          </div>

          <div className="mb-3">
            <label className="form-label">р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ</label>
            <input
              type="password" className="form-control" id="reg-password"
              value={password} onChange={(e) => setPassword(e.target.value)} required
              minLength={6}
            />
          </div>

          <div className="mb-3">
            <label className="form-label">р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ</label>
            <input
              type="password" className="form-control" id="reg-confirm"
              value={confirmPassword} onChange={(e) => setConfirm(e.target.value)} required
              minLength={6}
            />
          </div>

          <button type="submit" className="btn btn-success w-100" disabled={loading}>
            {loading ? "р╕Бр╕│р╕ер╕▒р╕Зр╕кр╕бр╕▒р╕Др╕г..." : "р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б"}
          </button>

          <p className="text-center mt-3">
            р╕бр╕╡р╕Ър╕▒р╕Нр╕Кр╕╡р╕нр╕вр╕╣р╣Ир╣Бр╕ер╣Йр╕з? <Link to="/login">р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ</Link>
          </p>
        </form>
      </div>
    </div>
  );
}
