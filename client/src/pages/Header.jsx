/*
 * ==================================================================================
 * üìã HEADER COMPONENT - ‡πÅ‡∏ñ‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
 * ==================================================================================
 * 
 * üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å, ‡πÇ‡∏•‡πÇ‡∏Å‡πâ, ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
 * üîê ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏ï‡∏≤‡∏° role (user/admin)
 * üì± Responsive: Bootstrap navbar ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
 * 
 * ==================================================================================
 */

import { Link, useNavigate } from "react-router-dom";
import { useAuth } from "../auth.jsx";
import { useEffect, useState } from "react";

// üåê ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API URL ‡∏à‡∏≤‡∏Å environment variable
const API = import.meta.env.VITE_API_URL || "http://localhost:3000";

export default function Header() {
  // üõ†Ô∏è Hooks ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
  const nav = useNavigate();
  const { user, ready, signOut } = useAuth();
  
  // üìÇ State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ
  const [categories, setCategories] = useState([]);           // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const [loadingCategories, setLoadingCategories] = useState(true); // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà

  // üîÑ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠ component mount
  useEffect(() => {
    fetch(`${API}/api/categories`)
      .then(res => res.json())                               // ‡πÅ‡∏õ‡∏•‡∏á response ‡πÄ‡∏õ‡πá‡∏ô JSON
      .then(data => setCategories(data))                     // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
      .catch(err => {
        console.error("‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", err);
        setCategories([]);                                   // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      })
      .finally(() => setLoadingCategories(false));           // ‡∏´‡∏¢‡∏∏‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading
  }, []);

  // ‚è≥ ‡∏£‡∏≠‡πÉ‡∏´‡πâ auth context ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á header
  if (!ready) return null;

  return (
    <>
      {/* Header fixed-top */}
      <header className="p-3 text-bg-dark fixed-top" style={{ zIndex: 1020 }}>
        <div className="container d-flex justify-content-between align-items-center">
          {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡πÇ‡∏•‡πÇ‡∏Å‡πâ + ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà + New Thread */}
          <div className="d-flex align-items-center gap-2">
            <Link to="/" className="navbar-brand text-white">Mini Forum</Link>

            {/* Dropdown ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
            <div className="dropdown">
              <button
                className="btn btn-sm btn-outline-light dropdown-toggle"
                type="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
              </button>
              <ul className="dropdown-menu">
                <li>
                  <Link className="dropdown-item" to="/thread">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Link>
                </li>
                {loadingCategories ? (
                  <li><span className="dropdown-item disabled">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</span></li>
                ) : (
                  categories.map(cat => (
                    <li key={cat.id}>
                      <Link className="dropdown-item" to={`/thread?category=${cat.id}`}>{cat.name}</Link>
                    </li>
                  ))
                )}
              </ul>
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ */}
            {user && (
              <Link to="/new_thread" className="btn btn-sm btn-success">
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ
              </Link>
            )}
          </div>

          {/* ‡∏Ç‡∏ß‡∏≤: user ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏∏‡πà‡∏° login/register */}
          {user ? (
            <div className="dropdown text-end">
              <a
                href="#"
                className="d-inline-flex align-items-center text-white text-decoration-none dropdown-toggle"
                data-bs-toggle="dropdown"
              >
                <img
                  src={`${API}${user.avatarUrl}`}
                  onError={(e) => { e.currentTarget.src = `${API}/static/avatars/default.png`; }}
                  alt="avatar"
                  width="32"
                  height="32"
                  className="rounded-circle me-2"
                />
                <span className="small">{user.username}</span>
              </a>
              <ul className="dropdown-menu dropdown-menu-end">
                <li><Link className="dropdown-item" to="/edit_profile">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</Link></li>
                <li><hr className="dropdown-divider" /></li>
                {user?.role === "admin" && (
                  <>
                    <li><Link className="dropdown-item" to="/report_list">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ</Link></li>
                    <li><hr className="dropdown-divider" /></li>
                    <li><Link className="dropdown-item" to="/manage_roles">‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</Link></li>
                    <li><hr className="dropdown-divider" /></li>
                    <li><Link className="dropdown-item" to="/dashboard">‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î</Link></li>
                    <li><hr className="dropdown-divider" /></li>
                    <li><Link className="dropdown-item" to="/manage_categories">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà</Link></li>
                    <li><hr className="dropdown-divider" /></li>
                  </>
                )}
                <li>
                  <button
                    className="dropdown-item"
                    onClick={async () => { await signOut(); nav("/thread", { replace: true }); }}
                  >
                    ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                  </button>
                </li>
              </ul>
            </div>
          ) : (
            <div className="d-flex gap-2">
              <Link to="/login" className="btn btn-sm btn-outline-light">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Link>
              <Link to="/register" className="btn btn-sm btn-primary">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</Link>
            </div>
          )}
        </div>
      </header>

      {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° margin-top ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏±‡∏ö Header */}
      <div style={{ marginTop: "70px" }} />
    </>
  );
}
