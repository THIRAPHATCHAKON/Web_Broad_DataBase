/*
 * ==================================================================================
 * üö® REPORT LIST PAGE - ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ (Admin Only)  
 * ==================================================================================
 * 
 * üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡πÉ‡∏´‡πâ Admin ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
 * üîê ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ
 * üìä ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå: ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô, ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•, ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô, Debug mode
 * 
 * ==================================================================================
 */

import { useEffect, useState, useCallback } from "react";
import { useAuth } from "../auth.jsx";
import Header from "./Header";
import Footer from "./Footer";

// üåê ‡∏Å‡∏≥‡∏´‡∏ô‡∏î API URL ‡∏à‡∏≤‡∏Å environment variable
const API = import.meta.env.VITE_API_URL || "http://localhost:3000";

export default function ReportList() {
  // üõ†Ô∏è Authentication ‡πÅ‡∏•‡∏∞ user management
  const { user } = useAuth();                         // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô admin)
  
  // üìä Main content states - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  const [reports, setReports] = useState([]);        // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  
  // ‚úèÔ∏è Edit functionality states - ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  const [editingReport, setEditingReport] = useState(null);  // ID ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const [editReason, setEditReason] = useState("");          // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  
  // üéõÔ∏è UI control states - ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° UI
  const [loading, setLoading] = useState(false);             // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç/‡∏•‡∏ö)
  const [pageLoading, setPageLoading] = useState(true);      // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
  const [error, setError] = useState(null);                  // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î

  // üì° ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
  const loadReports = useCallback(async () => {
    try {
      // üîç Debug logging ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
      console.log('=== Loading Reports Debug ===');
      console.log('API URL:', API);
      console.log('User:', user);
      console.log('User token exists:', !!user?.token);
      
      // üîê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö authentication token
      if (!user?.token) {
        throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á');
      }
      
      // üéõÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
      setPageLoading(true);
      setError(null);
      
      // üè• ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Å‡∏±‡∏ö health check
      try {
        const pingRes = await fetch(`${API}/api/health`).catch(() => null);
        console.log('Health check:', pingRes?.ok ? 'OK' : 'Failed');
      } catch (e) {
        console.log('Health check failed:', e);
      }
      
      // üîß ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ request headers ‡∏û‡∏£‡πâ‡∏≠‡∏° authentication
      const headers = { 
        "Authorization": `Bearer ${user.token}`,    // JWT token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå admin
        "Content-Type": "application/json"
      };
      console.log('Request URL:', `${API}/api/reports`);
      console.log('Request headers:', headers);
      
      // üì° ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
      const res = await fetch(`${API}/api/reports`, { 
        headers,
        method: 'GET'                             // ‡πÉ‡∏ä‡πâ GET method
      });
      
      // üîç Log ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• response ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debugging
      console.log('Response status:', res.status);
      console.log('Response ok:', res.ok);
      console.log('Response headers:', res.headers);

      // üö® ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ HTTP error status codes
      if (!res.ok) {
        const errorText = await res.text();
        console.error('Response error text:', errorText);
        
        // üîê 401 Unauthorized - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á
        if (res.status === 401) {
          throw new Error('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà');
        } 
        // üîç 404 Not Found - ‡πÑ‡∏°‡πà‡∏û‡∏ö API endpoint
        else if (res.status === 404) {
          throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö API endpoint');
        } 
        // üí• 500 Internal Server Error - ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤
        else if (res.status === 500) {
          throw new Error('‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤');
        } 
        // ‚ùå HTTP errors ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        else {
          throw new Error(`HTTP ${res.status}: ${errorText || 'Server Error'}`);
        }
      }

      // üìä ‡πÅ‡∏õ‡∏•‡∏á response ‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÅ‡∏•‡∏∞ log ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      const data = await res.json();
      console.log('Response data:', data);
      console.log('Reports array:', data.reports);
      
      // üîÑ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö response ‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô (flexibility)
      let reportsArray = [];
      if (Array.isArray(data)) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà server ‡∏™‡πà‡∏á array ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        reportsArray = data;
      } else if (data.reports && Array.isArray(data.reports)) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà server ‡∏™‡πà‡∏á object ‡∏û‡∏£‡πâ‡∏≠‡∏° reports property
        reportsArray = data.reports;
      } else if (data.data && Array.isArray(data.data)) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà server ‡∏™‡πà‡∏á object ‡∏û‡∏£‡πâ‡∏≠‡∏° data property
        reportsArray = data.data;
      }
      
      console.log('Final reports array:', reportsArray);
      setReports(reportsArray);                         // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
      
    } catch (error) {
      // üí• ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
      console.error('Error loading reports:', error);
      setError(error.message || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
      setReports([]);                                   // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏°
    } finally {
      setPageLoading(false);                            // ‡∏´‡∏¢‡∏∏‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    }
  }, [user]);

  // ‚è∞ Timeout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
  useEffect(() => {
    const timeout = setTimeout(() => {
      if (pageLoading) {
        console.warn('Loading timeout reached');
        setError('‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà');
        setPageLoading(false);
      }
    }, 10000);                                          // 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ timeout

    return () => clearTimeout(timeout);                 // ‡∏•‡πâ‡∏≤‡∏á timeout ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component unmount
  }, [pageLoading]);

  useEffect(() => {
    console.log('ReportList useEffect - user:', user);
    if (user?.token) {
      console.log('User has token, loading reports...');
      loadReports();
    } else {
      console.log('No user or token, setting page loading to false');
      setPageLoading(false);
    }
  }, [user, loadReports]);

  // üóëÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  const handleDelete = async (reportId) => {
    // üõ°Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
    if (!window.confirm("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ?")) return;
    
    setLoading(true);                                   // ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading
    try {
      // üì° ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ DELETE ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
      const res = await fetch(`${API}/api/reports/${reportId}`, {
        method: "DELETE",                               // ‡πÉ‡∏ä‡πâ DELETE method
        headers: { "Authorization": `Bearer ${user.token}` } // ‡∏™‡πà‡∏á token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
      });

      // üö® ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö
      if (!res.ok) {
        const errorData = await res.json().catch(() => ({ message: "‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" }));
        throw new Error(errorData.message || "‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }

      // ‚úÖ ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÉ‡∏ô frontend
      setReports(prev => prev.filter(r => r._id !== reportId)); // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å array
      alert("‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } catch (error) {
      // ‚ùå ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      console.error('Error deleting report:', error);
      alert(error.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô");
    } finally {
      setLoading(false);                                // ‡∏´‡∏¢‡∏∏‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading
    }
  };

  // ‚úèÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  const handleEdit = (report) => {
    setEditingReport(report._id);                       // ‡∏ï‡∏±‡πâ‡∏á ID ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    setEditReason(report.reason);                       // ‡πÉ‡∏™‡πà‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á input
  };

  // üíæ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  const handleSaveEdit = async (reportId) => {
    // üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!editReason.trim()) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô");
      return;
    }

    setLoading(true);                                   // ‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading
    try {
      // üì° ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠ PUT ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
      const res = await fetch(`${API}/api/reports/${reportId}`, {
        method: "PUT",                                  // ‡πÉ‡∏ä‡πâ PUT method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        headers: {
          "Content-Type": "application/json",
          "Authorization": `Bearer ${user.token}`       // ‡∏™‡πà‡∏á token ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
        },
        body: JSON.stringify({ reason: editReason.trim() }) // ‡∏™‡πà‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏´‡∏°‡πà
      });

      // üö® ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
      if (!res.ok) {
        const errorData = await res.json().catch(() => ({ message: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à" }));
        throw new Error(errorData.message || "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }

      await res.json();
      
      // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à - ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÉ‡∏ô frontend
      setReports(prev => prev.map(r => 
        r._id === reportId ? { ...r, reason: editReason.trim() } : r
      ));
      
      // üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
      setEditingReport(null);
      setEditReason("");
      alert("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } catch (error) {
      // ‚ùå ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      console.error('Error updating report:', error);
      alert(error.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô");
    } finally {
      setLoading(false);                                // ‡∏´‡∏¢‡∏∏‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loading
    }
  };

  // üö´ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const handleCancelEdit = () => {
    setEditingReport(null);                             // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    setEditReason("");                                  // ‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏ß‡πâ
  };

  // Loading page
  if (pageLoading) {
    return (
      <div className="d-flex flex-column min-vh-100">
        <Header />
        <main className="flex-grow-1 d-flex align-items-center justify-content-center">
          <div className="text-center">
            <div className="spinner-border text-primary mb-3" role="status" style={{ width: '3rem', height: '3rem' }}>
              <span className="visually-hidden">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</span>
            </div>
            <p className="text-muted">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô...</p>
          </div>
        </main>
        <Footer />
      </div>
    );
  }

  // Error page
  if (error) {
    return (
      <div className="d-flex flex-column min-vh-100">
        <Header />
        <main className="flex-grow-1 d-flex align-items-center justify-content-center">
          <div className="text-center">
            <div className="alert alert-danger" role="alert">
              <i className="bi bi-exclamation-triangle-fill me-2"></i>
              <h5>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h5>
              <p className="mb-3">{error}</p>
              <button 
                className="btn btn-primary"
                onClick={() => {
                  setError(null);
                  loadReports();
                }}
              >
                <i className="bi bi-arrow-clockwise me-1"></i>
                ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
              </button>
            </div>
          </div>
        </main>
        <Footer />
      </div>
    );
  }

  // Check if user is not logged in (only show this if not loading)
  if (!pageLoading && (!user || !user.token)) {
    return (
      <div className="d-flex flex-column min-vh-100">
        <Header />
        <main className="flex-grow-1 d-flex align-items-center justify-content-center">
          <div className="text-center">
            <div className="alert alert-warning" role="alert">
              <i className="bi bi-person-x me-2"></i>
              <h5>‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h5>
              <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</p>
              <button 
                className="btn btn-primary mt-2"
                onClick={() => window.location.href = '/login'}
              >
                <i className="bi bi-box-arrow-in-right me-1"></i>
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
              </button>
            </div>
          </div>
        </main>
        <Footer />
      </div>
    );
  }

  return (
    <div className="d-flex flex-column min-vh-100">
      <Header />
      <main className="flex-grow-1">
        <div className="container py-4">
          <div className="d-flex align-items-center justify-content-between mb-4">
            <div className="d-flex align-items-center">
              <h3 className="mb-0">
                <i className="bi bi-flag-fill text-warning me-2"></i>
                ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ
              </h3>
              <span className="badge bg-primary ms-3">{reports.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span>
            </div>
            <div className="d-flex gap-2">
              <button 
                className="btn btn-outline-secondary btn-sm"
                onClick={() => {
                  console.log('Debug Info:');
                  console.log('- User:', user);
                  console.log('- API URL:', API);
                  console.log('- Reports:', reports);
                  console.log('- Page Loading:', pageLoading);
                  console.log('- Error:', error);
                  alert('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• debug ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Console (F12)');
                }}
              >
                <i className="bi bi-bug me-1"></i>
                Debug
              </button>
              <button 
                className="btn btn-outline-primary btn-sm"
                onClick={() => {
                  setError(null);
                  loadReports();
                }}
                disabled={pageLoading}
              >
                <i className="bi bi-arrow-clockwise me-1"></i>
                ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
              </button>
            </div>
          </div>

          {reports.length === 0 ? (
            <div className="alert alert-info text-center">
              <i className="bi bi-info-circle me-2"></i>
              ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÉ‡∏î‡πÜ
            </div>
          ) : (
            <div className="row g-3">
              {reports.map(r => (
                <div className="col-12" key={r._id}>
                  <div className="card shadow-sm">
                    <div className="card-body">
                      <div className="row">
                        <div className="col-md-8">
                          <h6 className="card-title text-primary">
                            <i className="bi bi-chat-square-text me-1"></i>
                            {r.threadTitle}
                          </h6>
                          <p className="text-muted small mb-2">
                            <i className="bi bi-hash me-1"></i>
                            ID ‡∏Å‡∏£‡∏∞‡∏ó‡∏π‡πâ: {r.threadId}
                          </p>
                          <p className="mb-2">
                            <i className="bi bi-person-fill me-1"></i>
                            <strong>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÇ‡∏î‡∏¢:</strong> {r.reporterEmail}
                          </p>
                          
                          {/* ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô */}
                          <div className="mb-2">
                            <i className="bi bi-exclamation-triangle-fill text-warning me-1"></i>
                            <strong>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</strong>
                            {editingReport === r._id ? (
                              <div className="mt-2">
                                <textarea
                                  className="form-control"
                                  rows={3}
                                  value={editReason}
                                  onChange={(e) => setEditReason(e.target.value)}
                                  placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô..."
                                  disabled={loading}
                                />
                              </div>
                            ) : (
                              <span className="ms-1">{r.reason}</span>
                            )}
                          </div>
                          
                          <small className="text-muted">
                            <i className="bi bi-clock me-1"></i>
                            {new Date(r.createdAt).toLocaleString('th-TH')}
                          </small>
                        </div>
                        
                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
                        <div className="col-md-4 d-flex flex-column gap-2">
                          {editingReport === r._id ? (
                            <>
                              <button
                                className="btn btn-success btn-sm d-flex align-items-center justify-content-center"
                                onClick={() => handleSaveEdit(r._id)}
                                disabled={loading || !editReason.trim()}
                              >
                                {loading ? (
                                  <>
                                    <span className="spinner-border spinner-border-sm me-2" role="status"></span>
                                    <i className="bi bi-check2 me-1"></i>
                                    ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...
                                  </>
                                ) : (
                                  <>
                                    <i className="bi bi-check-circle-fill me-1"></i>
                                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                                  </>
                                )}
                              </button>
                              <button
                                className="btn btn-outline-secondary btn-sm d-flex align-items-center justify-content-center"
                                onClick={handleCancelEdit}
                                disabled={loading}
                              >
                                <i className="bi bi-x-circle me-1"></i>
                                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                              </button>
                            </>
                          ) : (
                            <>
                              <button
                                className="btn btn-outline-primary btn-sm d-flex align-items-center justify-content-center"
                                onClick={() => handleEdit(r)}
                                disabled={loading}
                                title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô"
                              >
                                <i className="bi bi-pencil-square me-1"></i>
                                ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                              </button>
                              <button
                                className="btn btn-outline-danger btn-sm d-flex align-items-center justify-content-center"
                                onClick={() => handleDelete(r._id)}
                                disabled={loading}
                                title="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ"
                              >
                                <i className="bi bi-trash3-fill me-1"></i>
                                ‡∏•‡∏ö
                              </button>
                            </>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </main>
    </div>
  );
}